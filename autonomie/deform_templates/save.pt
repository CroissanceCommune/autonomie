    <!--
        Here we get the last payment row which should be the sold
        We then add a row after paymentcontainer since this one should never be removable
    -->
    <%
        solde, soldefield = subfields[-1]
        if not isinstance(solde, dict):
            solde = {}
        else:
            for key, value in solde.items():
                if value == colander.null:
                    solde.pop(key)
        if not isinstance(solde.get('date', '0'), basestring):
            solde['date'] = '';
    %>
    <script
      type='text/javascript'
      >
        var description = "";
        % for line in solde.get('description', "Solde").splitlines():
            description += "${line}";
            % if not loop.last:
                description += "\n";
            % endif
        % endfor
        var solde = {amount:formatAmount("${solde.get('amount', '0')}"),
            description:description,
            date:"${solde.get('date')}",
            readonly:true,
            id:1000};
        % if soldefield.error:
            % for key, value in soldefield.error.asdict().items():
                solde["${key[2:]}_error"] = "${_(value)}";
            % endfor
        % endif
        addPaymentRow(solde, '#paymentcontainer');
    </script>
    <script type='text/javascript'>
        ## We go through the rest of the rows to add payment rows
        ## We have to check if their editable or not when adding them
        % for sub in subfields[:-1]:

            % if isinstance(sub[0], dict):
                % if not isinstance(sub[0].get('amount', '0'), basestring):
                    <%
                        sub[0]['amount'] = " ";
                    %>
                % endif
                % if not isinstance(sub[0].get('date', '0'), basestring):
                    <%
                        sub[0]['date'] = " ";
                    %>
                %endif
                var description = "";
                % for description_line in sub[0].get('description', "Paiement").splitlines():
                    description += "${description_line}\n";
                % endfor

                var line = {
                    amount:formatAmount("${sub[0].get('amount', '0')}"),
                    description:description,
                    date:"${sub[0].get('date', '')}",
                    readonly:true};
                % if sub[1].error:
                    % for key, value in sub[1].error.asdict().items():
                        line["${key[2:]}_error"] = "${_(value)}";
                    % endfor
                % endif
                addPaymentRow(line);
            % endif
        % endfor
        $('select[name=deposit]').change(function(){
            $(Facade).trigger('depositchange', this);
        });
        $('select[name=payment_times]').change(function(){
            $(Facade).trigger('payment_timeschange', this);
        });
    </script>

