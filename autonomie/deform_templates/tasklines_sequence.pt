<div tal:define="item_tmpl item_template|field.widget.item_template;
                 oid oid|field.oid;
                 name name|field.name;
                 min_len min_len|field.widget.min_len;
                 min_len min_len or 0;
                 max_len max_len|field.widget.max_len;
                 max_len max_len or 100000;
                 now_len len(subfields);
                 orderable orderable|field.widget.orderable;
                 orderable orderable and 1 or 0;
                 prototype field.widget.prototype(field);
                 title title|field.title;"
     class="deform-seq"
     id="${oid}">

  <input type="hidden" name="__start__"
         value="${field.name}:sequence"
         class="deform-proto"
         tal:attributes="prototype prototype"/>

  <!-- Custom datas insertion -->

    <div class='row linesblockheader'>
      <div class="col-md-11 hidden-sm hidden-xs">
        <tal:if tal:condition="field.schema.is_admin and field.schema.doctype is not 'estimation'">
        <div class='col-md-3'>Prestation</div>
        <div class='col-md-1'>Prix/unité</div>
        <div class='col-md-1'>Quantité</div>
        <div class='col-md-2'>Unité</div>
        <div class='col-md-1'>TVA</div>
        <div class='col-md-2'>Code produit</div>
        </tal:if>
        <tal:if tal:condition="not field.schema.is_admin or field.schema.doctype is 'estimation'">
            <div class='col-md-4'>Prestation</div>
            <div class='col-md-1'>Prix/unité</div>
            <div class='col-md-1'>Quantité</div>
            <div class='col-md-2'>Unité</div>
            <div class='col-md-2'>TVA</div>
        </tal:if>
        <div class='col-md-1'>Total HT</div>
      </div>
    </div>
  <!-- end custom -->
    <div class="deform-seq-container" id="${oid}-orderable">
        <div tal:define="subfields [ x[1] for x in subfields ]"
             tal:repeat="subfield subfields"
             tal:replace="structure subfield.render_template(item_tmpl,
                                                          parent=field)" />
        <span class="deform-insert-before"
              tal:attributes="
                 min_len min_len;
                 max_len max_len;
                 now_len now_len;
                 orderable orderable;"></span>
    </div>
  <!-- Custom datas insertion -->
    <div class="col-md-offset-9">
      <button
        type='button'
         class="btn btn-info taskline-add"
         id="${field.oid}-seqAdd"
         onclick="javascript: return addTaskLine(this); ">
         <small id="${field.oid}-addtext">${add_subitem_text}</small>
      </button>
      <button
        type='button'
         class="btn btn-info"
         id="${field.oid}-seqAdd"
         onclick="javascript: return catalog.popup('sale_product', this);">
         <small id="${field.oid}-addtext">Ajouter un produit depuis le catalogue</small>
      </button>
  <!-- end custom -->

      <script type="text/javascript">
       var field_oid = "${field.oid}";
       deform.addCallback(
         field_oid,
         function(oid) {
           oid_node = $('#'+ oid);
           deform.processSequenceButtons(oid_node, ${min_len},
                                         ${max_len}, ${now_len},
                                         ${orderable});
           }
         );
         <tal:block condition="orderable">
             $( "#" + field_oid + "-orderable" ).sortable({
               handle: ".deform-order-button, .panel-heading",
               containerSelector: "#" + field_oid + "-orderable",
               itemSelector: ".deform-seq-item",
               placeholder: '<span class="glyphicon glyphicon-arrow-right placeholder"></span>',
               start: function(e, ui){
                $(this).find('textarea.tinymce').each(function(){
                    // On retrouve la hauteur l'instance de tinymce (qui est
                    // juste avant le textarea)
                    var height = $(this).prev().height();
                    tinyMCE.execCommand( 'mceRemoveEditor', false, $(this).attr('id') );
                    $(this).height(height);
                    tinyMCE.triggerSave();
                });
               },
               stop: function(e, ui){
                $(this).find('textarea.tinymce').each(function(){
                    tinyMCE.execCommand( 'mceAddEditor', false, $(this).attr('id') );
                });
               },
               onDragStart: function ($item, container, _super) {
                 var offset = $item.offset(),
                 pointer = container.rootGroup.pointer

                 adjustment = {
                   left: pointer.left - offset.left,
                   top: pointer.top - offset.top
                 }

                 _super($item, container)
               },
               onDrag: function ($item, position) {
                   $item.css({
                     left: position.left - adjustment.left,
                     top: position.top - adjustment.top
                   })
                 }
               });
         </tal:block>
      </script>
    </div>
    <hr/>

    <input type="hidden" name="__end__" value="${field.name}:sequence"/>
      <!-- /sequence -->
</div>
